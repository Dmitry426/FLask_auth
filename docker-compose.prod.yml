version: "3.8"
services:
  app:
    build:
      context: .
      target: production
    environment:
      - PORT_APP=3000
      - WORKERS=2
      - ASYNC_CORES=2000
      - PROTOCOL=http

    volumes:
      - "auth_api_logs:/src/logs"
    env_file:
      - .env
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  redis:
    image: redis:6-alpine
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - "redis-data:/data"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 10

  postgres:
    image: postgres:14
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - "postgres-data:/var/lib/postgresql"
    environment:
      POSTGRES_USER: ${SQLALCHEMY_USERNAME}
      POSTGRES_PASSWORD: ${SQLALCHEMY_PASSWORD}
      POSTGRES_DB: ${SQLALCHEMY_DATABASE_NAME}
    healthcheck:
      test: pg_isready -U ${SQLALCHEMY_USERNAME} -d ${SQLALCHEMY_DATABASE_NAME}
      interval: 5s
      timeout: 20s
      retries: 5

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - app

volumes:
  redis-data:
    driver: "local"
  postgres-data:
    driver: "local"
  auth_api_logs:
