[tool.poetry]
name = "AUTH APP"
description = "Yandex.Practicum. Sprint 6."
version = "2022.01.1"
authors = []

[tool.poetry.dependencies]
python = "^3.8"
Flask = "^2.0.2"
SQLAlchemy = "^1.4.29"
psycopg2-binary = "^2.9.3"
Flask-SQLAlchemy = "^2.5.1"
redis = "^4.1.0"
pydantic = "^1.9.0"
gevent = "^21.12.0"
pyuwsgi = "^2.0.20"
flasgger = "^0.9.5"

[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
coverage = "^6.2"
flake8 = "^4.0"
isort = "^5.8"
mypy = "^0.931"
pre-commit = "^2.11"
pylint = "^2.7.4"
pytest = "^6.2"
pytest-asyncio = "^0.17"
pytest-cov = "^3.0"


[tool.black]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | venv
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
multi_line_output = 3


[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.pylint.messages_control]
max-line-length = 88
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
]

ignored-modules = ["pydantic", "flask_sqlalchemy"]
good-names = []

[tool.pylint.similarities]
ignore-imports = true
ignore-docstrings = true
ignore-comments = true


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(levelname)-5.5s [%(name)s] %(message)s"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
